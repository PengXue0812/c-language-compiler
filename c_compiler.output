Useless nonterminals

   declare


Terminals which are not used

   S_QUO


Useless rules

   86 declare: descriptor declares


State 2 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce
State 45 conflicts: 2 reduce/reduce
State 90 conflicts: 2 reduce/reduce
State 152 conflicts: 2 reduce/reduce
State 169 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: blocks

    2 blocks: block
    3       | blocks block

    4 block: descriptor declares SEMI
    5      | descriptor function body
    6      | descriptor function SEMI

    7 variable: IDENTIFIER
    8         | IDENTIFIER '[' ']'
    9         | IDENTIFIER '[' CONST ']'
   10         | IDENTIFIER '[' expression ']'
   11         | '*' IDENTIFIER

   12 consts: CONST
   13       | consts COMMA CONST

   14 descriptor: INT
   15           | VOID
   16           | INT '*'

   17 function: IDENTIFIER '(' ')'
   18         | IDENTIFIER '(' params ')'

   19 params: params COMMA param
   20       | param

   21 param: descriptor IDENTIFIER
   22      | descriptor IDENTIFIER '[' CONST ']'
   23      | descriptor IDENTIFIER '[' ']'
   24      | descriptor SINGLAND IDENTIFIER
   25      | descriptor SINGLAND '*' IDENTIFIER
   26      | descriptor

   27 body: '{' statements '}'

   28 statements: statements statement
   29           | statement

   30 statement: expression SEMI
   31          | declares SEMI
   32          | body
   33          | RETURN expression SEMI
   34          | RETURN SEMI
   35          | IF '(' expression ')' statement
   36          | IF '(' expression ')' statement ELSE statement
   37          | WHILE '(' expression ')' statement
   38          | FOR '(' SEMI SEMI ')' statement
   39          | FOR '(' forstart SEMI SEMI ')' statement
   40          | FOR '(' SEMI expression SEMI ')' statement
   41          | FOR '(' SEMI SEMI expression ')' statement
   42          | FOR '(' forstart SEMI expression SEMI expression ')' statement
   43          | FOR '(' forstart SEMI expression SEMI ')' statement
   44          | FOR '(' forstart SEMI SEMI expression ')' statement
   45          | FOR '(' SEMI expression SEMI expression ')' statement
   46          | BREAK SEMI
   47          | CONTINUE SEMI
   48          | PRINTF '(' D_QUO expression D_QUO ')' SEMI
   49          | PRINTF '(' expression ')' SEMI
   50          | SCANF '(' IDENTIFIER ')' SEMI

   51 declares: declarevars
   52         | declarevars COMMA declares

   53 declarevars: variable
   54            | variable ASSIGN_OP expression

   55 forstart: declares
   56         | expression

   57 expression: CONST
   58           | identifiers
   59           | expression ASSIGN_OP expression
   60           | expression '+' expression
   61           | expression '-' expression
   62           | expression '*' expression
   63           | expression '/' expression
   64           | expression '%' expression
   65           | '(' expression ')'
   66           | '-' expression
   67           | expression AND expression
   68           | expression OR expression
   69           | '!' expression
   70           | '{' consts '}'
   71           | expression EQ_OP expression
   72           | expression NE_OP expression
   73           | expression GT_OP expression
   74           | expression LT_OP expression
   75           | expression GE_OP expression
   76           | expression LE_OP expression
   77           | IDENTIFIER '(' arguments ')'
   78           | IDENTIFIER '(' ')'
   79           | '*' IDENTIFIER
   80           | IDENTIFIER '[' expression ']'
   81           | SINGLAND IDENTIFIER

   82 arguments: expression
   83          | arguments COMMA expression

   84 identifiers: IDENTIFIER
   85            | identifiers IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69
'%' (37) 64
'(' (40) 17 18 35 36 37 38 39 40 41 42 43 44 45 48 49 50 65 77 78
')' (41) 17 18 35 36 37 38 39 40 41 42 43 44 45 48 49 50 65 77 78
'*' (42) 11 16 25 62 79
'+' (43) 60
'-' (45) 61 66
'/' (47) 63
'[' (91) 8 9 10 22 23 80
']' (93) 8 9 10 22 23 80
'{' (123) 27 70
'}' (125) 27 70
error (256)
ASSIGN_OP (258) 54 59
OR (259) 68
AND (260) 67
SINGLAND (261) 24 25 81
NE_OP (262) 72
EQ_OP (263) 71
LE_OP (264) 76
GE_OP (265) 75
LT_OP (266) 74
GT_OP (267) 73
PRINTF (268) 48 49
SCANF (269) 50
IDENTIFIER (270) 7 8 9 10 11 17 18 21 22 23 24 25 50 77 78 79 80 81
    84 85
CONST (271) 9 12 13 22 57
LOWER_THAN_ELSE (272)
WHILE (273) 37
FOR (274) 38 39 40 41 42 43 44 45
BREAK (275) 46
CONTINUE (276) 47
IF (277) 35 36
ELSE (278) 36
RETURN (279) 33 34
VOID (280) 15
S_QUO (281)
D_QUO (282) 48
INT (283) 14 16
COMMA (284) 13 19 52 83
SEMI (285) 4 6 30 31 33 34 38 39 40 41 42 43 44 45 46 47 48 49 50


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
blocks (45)
    on left: 2 3, on right: 1 3
block (46)
    on left: 4 5 6, on right: 2 3
variable (47)
    on left: 7 8 9 10 11, on right: 53 54
consts (48)
    on left: 12 13, on right: 13 70
descriptor (49)
    on left: 14 15 16, on right: 4 5 6 21 22 23 24 25 26
function (50)
    on left: 17 18, on right: 5 6
params (51)
    on left: 19 20, on right: 18 19
param (52)
    on left: 21 22 23 24 25 26, on right: 19 20
body (53)
    on left: 27, on right: 5 32
statements (54)
    on left: 28 29, on right: 27 28
statement (55)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50, on right: 28 29 35 36 37 38 39 40 41 42 43 44 45
declares (56)
    on left: 51 52, on right: 4 31 52 55
declarevars (57)
    on left: 53 54, on right: 51 52
forstart (58)
    on left: 55 56, on right: 39 42 43 44
expression (59)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81, on right: 10 30 33 35 36 37 40 41 42 43 44
    45 48 49 54 56 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75
    76 80 82 83
arguments (60)
    on left: 82 83, on right: 77 83
identifiers (61)
    on left: 84 85, on right: 58 85


state 0

    0 $accept: . program $end

    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    program     go to state 3
    blocks      go to state 4
    block       go to state 5
    descriptor  go to state 6


state 1

   15 descriptor: VOID .

    $default  reduce using rule 15 (descriptor)


state 2

   14 descriptor: INT .
   16           | INT . '*'

    '*'  shift, and go to state 7

    '*'       [reduce using rule 14 (descriptor)]
    $default  reduce using rule 14 (descriptor)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: blocks .
    3 blocks: blocks . block

    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    $default  reduce using rule 1 (program)

    block       go to state 9
    descriptor  go to state 6


state 5

    2 blocks: block .

    $default  reduce using rule 2 (blocks)


state 6

    4 block: descriptor . declares SEMI
    5      | descriptor . function body
    6      | descriptor . function SEMI

    '*'         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    variable     go to state 12
    function     go to state 13
    declares     go to state 14
    declarevars  go to state 15


state 7

   16 descriptor: INT '*' .

    $default  reduce using rule 16 (descriptor)


state 8

    0 $accept: program $end .

    $default  accept


state 9

    3 blocks: blocks block .

    $default  reduce using rule 3 (blocks)


state 10

   11 variable: '*' . IDENTIFIER

    IDENTIFIER  shift, and go to state 16


state 11

    7 variable: IDENTIFIER .
    8         | IDENTIFIER . '[' ']'
    9         | IDENTIFIER . '[' CONST ']'
   10         | IDENTIFIER . '[' expression ']'
   17 function: IDENTIFIER . '(' ')'
   18         | IDENTIFIER . '(' params ')'

    '('  shift, and go to state 17
    '['  shift, and go to state 18

    $default  reduce using rule 7 (variable)


state 12

   53 declarevars: variable .
   54            | variable . ASSIGN_OP expression

    ASSIGN_OP  shift, and go to state 19

    $default  reduce using rule 53 (declarevars)


state 13

    5 block: descriptor function . body
    6      | descriptor function . SEMI

    SEMI  shift, and go to state 20
    '{'   shift, and go to state 21

    body  go to state 22


state 14

    4 block: descriptor declares . SEMI

    SEMI  shift, and go to state 23


state 15

   51 declares: declarevars .
   52         | declarevars . COMMA declares

    COMMA  shift, and go to state 24

    $default  reduce using rule 51 (declares)


state 16

   11 variable: '*' IDENTIFIER .

    $default  reduce using rule 11 (variable)


state 17

   17 function: IDENTIFIER '(' . ')'
   18         | IDENTIFIER '(' . params ')'

    ')'   shift, and go to state 25
    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    descriptor  go to state 26
    params      go to state 27
    param       go to state 28


state 18

    8 variable: IDENTIFIER '[' . ']'
    9         | IDENTIFIER '[' . CONST ']'
   10         | IDENTIFIER '[' . expression ']'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ']'         shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 36
    '{'         shift, and go to state 37

    expression   go to state 38
    identifiers  go to state 39


state 19

   54 declarevars: variable ASSIGN_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 41
    identifiers  go to state 39


state 20

    6 block: descriptor function SEMI .

    $default  reduce using rule 6 (block)


state 21

   27 body: '{' . statements '}'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statements   go to state 54
    statement    go to state 55
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 22

    5 block: descriptor function body .

    $default  reduce using rule 5 (block)


state 23

    4 block: descriptor declares SEMI .

    $default  reduce using rule 4 (block)


state 24

   52 declares: declarevars COMMA . declares

    '*'         shift, and go to state 10
    IDENTIFIER  shift, and go to state 58

    variable     go to state 12
    declares     go to state 59
    declarevars  go to state 15


state 25

   17 function: IDENTIFIER '(' ')' .

    $default  reduce using rule 17 (function)


state 26

   21 param: descriptor . IDENTIFIER
   22      | descriptor . IDENTIFIER '[' CONST ']'
   23      | descriptor . IDENTIFIER '[' ']'
   24      | descriptor . SINGLAND IDENTIFIER
   25      | descriptor . SINGLAND '*' IDENTIFIER
   26      | descriptor .

    SINGLAND    shift, and go to state 60
    IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 26 (param)


state 27

   18 function: IDENTIFIER '(' params . ')'
   19 params: params . COMMA param

    ')'    shift, and go to state 62
    COMMA  shift, and go to state 63


state 28

   20 params: param .

    $default  reduce using rule 20 (params)


state 29

   81 expression: SINGLAND . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


state 30

   66 expression: '-' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 65
    identifiers  go to state 39


state 31

   79 expression: '*' . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


state 32

   69 expression: '!' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 67
    identifiers  go to state 39


state 33

   65 expression: '(' . expression ')'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 68
    identifiers  go to state 39


state 34

    8 variable: IDENTIFIER '[' ']' .

    $default  reduce using rule 8 (variable)


state 35

   77 expression: IDENTIFIER . '(' arguments ')'
   78           | IDENTIFIER . '(' ')'
   80           | IDENTIFIER . '[' expression ']'
   84 identifiers: IDENTIFIER .

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 84 (identifiers)


state 36

    9 variable: IDENTIFIER '[' CONST . ']'
   57 expression: CONST .

    ']'  shift, and go to state 71

    ']'       [reduce using rule 57 (expression)]
    $default  reduce using rule 57 (expression)


state 37

   70 expression: '{' . consts '}'

    CONST  shift, and go to state 72

    consts  go to state 73


state 38

   10 variable: IDENTIFIER '[' expression . ']'
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ']'        shift, and go to state 88


state 39

   58 expression: identifiers .
   85 identifiers: identifiers . IDENTIFIER

    IDENTIFIER  shift, and go to state 89

    $default  reduce using rule 58 (expression)


state 40

   57 expression: CONST .

    $default  reduce using rule 57 (expression)


state 41

   54 declarevars: variable ASSIGN_OP expression .
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87

    $default  reduce using rule 54 (declarevars)


state 42

   11 variable: '*' . IDENTIFIER
   79 expression: '*' . IDENTIFIER

    IDENTIFIER  shift, and go to state 90


state 43

   48 statement: PRINTF . '(' D_QUO expression D_QUO ')' SEMI
   49          | PRINTF . '(' expression ')' SEMI

    '('  shift, and go to state 91


state 44

   50 statement: SCANF . '(' IDENTIFIER ')' SEMI

    '('  shift, and go to state 92


state 45

    7 variable: IDENTIFIER .
    8         | IDENTIFIER . '[' ']'
    9         | IDENTIFIER . '[' CONST ']'
   10         | IDENTIFIER . '[' expression ']'
   77 expression: IDENTIFIER . '(' arguments ')'
   78           | IDENTIFIER . '(' ')'
   80           | IDENTIFIER . '[' expression ']'
   84 identifiers: IDENTIFIER .

    '('  shift, and go to state 69
    '['  shift, and go to state 93

    ASSIGN_OP  reduce using rule 7 (variable)
    ASSIGN_OP  [reduce using rule 84 (identifiers)]
    COMMA      reduce using rule 7 (variable)
    SEMI       reduce using rule 7 (variable)
    SEMI       [reduce using rule 84 (identifiers)]
    $default   reduce using rule 84 (identifiers)


state 46

   37 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 94


state 47

   38 statement: FOR . '(' SEMI SEMI ')' statement
   39          | FOR . '(' forstart SEMI SEMI ')' statement
   40          | FOR . '(' SEMI expression SEMI ')' statement
   41          | FOR . '(' SEMI SEMI expression ')' statement
   42          | FOR . '(' forstart SEMI expression SEMI expression ')' statement
   43          | FOR . '(' forstart SEMI expression SEMI ')' statement
   44          | FOR . '(' forstart SEMI SEMI expression ')' statement
   45          | FOR . '(' SEMI expression SEMI expression ')' statement

    '('  shift, and go to state 95


state 48

   46 statement: BREAK . SEMI

    SEMI  shift, and go to state 96


state 49

   47 statement: CONTINUE . SEMI

    SEMI  shift, and go to state 97


state 50

   35 statement: IF . '(' expression ')' statement
   36          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 98


state 51

   33 statement: RETURN . expression SEMI
   34          | RETURN . SEMI

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    SEMI        shift, and go to state 99
    '{'         shift, and go to state 37

    expression   go to state 100
    identifiers  go to state 39


state 52

   27 body: '{' . statements '}'
   70 expression: '{' . consts '}'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 101
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    consts       go to state 73
    body         go to state 53
    statements   go to state 54
    statement    go to state 55
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 53

   32 statement: body .

    $default  reduce using rule 32 (statement)


state 54

   27 body: '{' statements . '}'
   28 statements: statements . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52
    '}'         shift, and go to state 102

    variable     go to state 12
    body         go to state 53
    statement    go to state 103
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 55

   29 statements: statement .

    $default  reduce using rule 29 (statements)


state 56

   31 statement: declares . SEMI

    SEMI  shift, and go to state 104


state 57

   30 statement: expression . SEMI
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    SEMI       shift, and go to state 105


state 58

    7 variable: IDENTIFIER .
    8         | IDENTIFIER . '[' ']'
    9         | IDENTIFIER . '[' CONST ']'
   10         | IDENTIFIER . '[' expression ']'

    '['  shift, and go to state 18

    $default  reduce using rule 7 (variable)


state 59

   52 declares: declarevars COMMA declares .

    $default  reduce using rule 52 (declares)


state 60

   24 param: descriptor SINGLAND . IDENTIFIER
   25      | descriptor SINGLAND . '*' IDENTIFIER

    '*'         shift, and go to state 106
    IDENTIFIER  shift, and go to state 107


state 61

   21 param: descriptor IDENTIFIER .
   22      | descriptor IDENTIFIER . '[' CONST ']'
   23      | descriptor IDENTIFIER . '[' ']'

    '['  shift, and go to state 108

    $default  reduce using rule 21 (param)


state 62

   18 function: IDENTIFIER '(' params ')' .

    $default  reduce using rule 18 (function)


state 63

   19 params: params COMMA . param

    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    descriptor  go to state 26
    param       go to state 109


state 64

   81 expression: SINGLAND IDENTIFIER .

    $default  reduce using rule 81 (expression)


state 65

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   66           | '-' expression .
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 66 (expression)


state 66

   79 expression: '*' IDENTIFIER .

    $default  reduce using rule 79 (expression)


state 67

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   69           | '!' expression .
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    $default  reduce using rule 69 (expression)


state 68

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | '(' expression . ')'
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 110


state 69

   77 expression: IDENTIFIER '(' . arguments ')'
   78           | IDENTIFIER '(' . ')'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ')'         shift, and go to state 111
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 112
    arguments    go to state 113
    identifiers  go to state 39


state 70

   80 expression: IDENTIFIER '[' . expression ']'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 114
    identifiers  go to state 39


state 71

    9 variable: IDENTIFIER '[' CONST ']' .

    $default  reduce using rule 9 (variable)


state 72

   12 consts: CONST .

    $default  reduce using rule 12 (consts)


state 73

   13 consts: consts . COMMA CONST
   70 expression: '{' consts . '}'

    COMMA  shift, and go to state 115
    '}'    shift, and go to state 116


state 74

   59 expression: expression ASSIGN_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 117
    identifiers  go to state 39


state 75

   68 expression: expression OR . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 118
    identifiers  go to state 39


state 76

   67 expression: expression AND . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 119
    identifiers  go to state 39


state 77

   72 expression: expression NE_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 120
    identifiers  go to state 39


state 78

   71 expression: expression EQ_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 121
    identifiers  go to state 39


state 79

   76 expression: expression LE_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 122
    identifiers  go to state 39


state 80

   75 expression: expression GE_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 123
    identifiers  go to state 39


state 81

   74 expression: expression LT_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 124
    identifiers  go to state 39


state 82

   73 expression: expression GT_OP . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 125
    identifiers  go to state 39


state 83

   60 expression: expression '+' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 126
    identifiers  go to state 39


state 84

   61 expression: expression '-' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 127
    identifiers  go to state 39


state 85

   62 expression: expression '*' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 128
    identifiers  go to state 39


state 86

   63 expression: expression '/' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 129
    identifiers  go to state 39


state 87

   64 expression: expression '%' . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 130
    identifiers  go to state 39


state 88

   10 variable: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 10 (variable)


state 89

   85 identifiers: identifiers IDENTIFIER .

    $default  reduce using rule 85 (identifiers)


state 90

   11 variable: '*' IDENTIFIER .
   79 expression: '*' IDENTIFIER .

    ASSIGN_OP  reduce using rule 11 (variable)
    ASSIGN_OP  [reduce using rule 79 (expression)]
    COMMA      reduce using rule 11 (variable)
    SEMI       reduce using rule 11 (variable)
    SEMI       [reduce using rule 79 (expression)]
    $default   reduce using rule 79 (expression)


state 91

   48 statement: PRINTF '(' . D_QUO expression D_QUO ')' SEMI
   49          | PRINTF '(' . expression ')' SEMI

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    D_QUO       shift, and go to state 131
    '{'         shift, and go to state 37

    expression   go to state 132
    identifiers  go to state 39


state 92

   50 statement: SCANF '(' . IDENTIFIER ')' SEMI

    IDENTIFIER  shift, and go to state 133


state 93

    8 variable: IDENTIFIER '[' . ']'
    9         | IDENTIFIER '[' . CONST ']'
   10         | IDENTIFIER '[' . expression ']'
   80 expression: IDENTIFIER '[' . expression ']'

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ']'         shift, and go to state 34
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 36
    '{'         shift, and go to state 37

    expression   go to state 134
    identifiers  go to state 39


state 94

   37 statement: WHILE '(' . expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 135
    identifiers  go to state 39


state 95

   38 statement: FOR '(' . SEMI SEMI ')' statement
   39          | FOR '(' . forstart SEMI SEMI ')' statement
   40          | FOR '(' . SEMI expression SEMI ')' statement
   41          | FOR '(' . SEMI SEMI expression ')' statement
   42          | FOR '(' . forstart SEMI expression SEMI expression ')' statement
   43          | FOR '(' . forstart SEMI expression SEMI ')' statement
   44          | FOR '(' . forstart SEMI SEMI expression ')' statement
   45          | FOR '(' . SEMI expression SEMI expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    SEMI        shift, and go to state 136
    '{'         shift, and go to state 37

    variable     go to state 12
    declares     go to state 137
    declarevars  go to state 15
    forstart     go to state 138
    expression   go to state 139
    identifiers  go to state 39


state 96

   46 statement: BREAK SEMI .

    $default  reduce using rule 46 (statement)


state 97

   47 statement: CONTINUE SEMI .

    $default  reduce using rule 47 (statement)


state 98

   35 statement: IF '(' . expression ')' statement
   36          | IF '(' . expression ')' statement ELSE statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 140
    identifiers  go to state 39


state 99

   34 statement: RETURN SEMI .

    $default  reduce using rule 34 (statement)


state 100

   33 statement: RETURN expression . SEMI
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    SEMI       shift, and go to state 141


state 101

   12 consts: CONST .
   57 expression: CONST .

    COMMA     reduce using rule 12 (consts)
    '}'       reduce using rule 12 (consts)
    $default  reduce using rule 57 (expression)


state 102

   27 body: '{' statements '}' .

    $default  reduce using rule 27 (body)


state 103

   28 statements: statements statement .

    $default  reduce using rule 28 (statements)


state 104

   31 statement: declares SEMI .

    $default  reduce using rule 31 (statement)


state 105

   30 statement: expression SEMI .

    $default  reduce using rule 30 (statement)


state 106

   25 param: descriptor SINGLAND '*' . IDENTIFIER

    IDENTIFIER  shift, and go to state 142


state 107

   24 param: descriptor SINGLAND IDENTIFIER .

    $default  reduce using rule 24 (param)


state 108

   22 param: descriptor IDENTIFIER '[' . CONST ']'
   23      | descriptor IDENTIFIER '[' . ']'

    ']'    shift, and go to state 143
    CONST  shift, and go to state 144


state 109

   19 params: params COMMA param .

    $default  reduce using rule 19 (params)


state 110

   65 expression: '(' expression ')' .

    $default  reduce using rule 65 (expression)


state 111

   78 expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 78 (expression)


state 112

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression
   82 arguments: expression .

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87

    $default  reduce using rule 82 (arguments)


state 113

   77 expression: IDENTIFIER '(' arguments . ')'
   83 arguments: arguments . COMMA expression

    ')'    shift, and go to state 145
    COMMA  shift, and go to state 146


state 114

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression
   80           | IDENTIFIER '[' expression . ']'

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ']'        shift, and go to state 147


state 115

   13 consts: consts COMMA . CONST

    CONST  shift, and go to state 148


state 116

   70 expression: '{' consts '}' .

    $default  reduce using rule 70 (expression)


state 117

   59 expression: expression . ASSIGN_OP expression
   59           | expression ASSIGN_OP expression .
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87

    $default  reduce using rule 59 (expression)


state 118

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   68           | expression OR expression .
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    AND    shift, and go to state 76
    NE_OP  shift, and go to state 77
    EQ_OP  shift, and go to state 78
    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    LT_OP  shift, and go to state 81
    GT_OP  shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86
    '%'    shift, and go to state 87

    $default  reduce using rule 68 (expression)


state 119

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   67           | expression AND expression .
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    NE_OP  shift, and go to state 77
    EQ_OP  shift, and go to state 78
    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    LT_OP  shift, and go to state 81
    GT_OP  shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86
    '%'    shift, and go to state 87

    $default  reduce using rule 67 (expression)


state 120

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   72           | expression NE_OP expression .
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    LT_OP  shift, and go to state 81
    GT_OP  shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86
    '%'    shift, and go to state 87

    $default  reduce using rule 72 (expression)


state 121

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   71           | expression EQ_OP expression .
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    LT_OP  shift, and go to state 81
    GT_OP  shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86
    '%'    shift, and go to state 87

    $default  reduce using rule 71 (expression)


state 122

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression
   76           | expression LE_OP expression .

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 76 (expression)


state 123

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   75           | expression GE_OP expression .
   76           | expression . LE_OP expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 75 (expression)


state 124

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   74           | expression LT_OP expression .
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 74 (expression)


state 125

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   73           | expression GT_OP expression .
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 73 (expression)


state 126

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   60           | expression '+' expression .
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 60 (expression)


state 127

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   61           | expression '-' expression .
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 61 (expression)


state 128

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   62           | expression '*' expression .
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    $default  reduce using rule 62 (expression)


state 129

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   63           | expression '/' expression .
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    $default  reduce using rule 63 (expression)


state 130

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   64           | expression '%' expression .
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    $default  reduce using rule 64 (expression)


state 131

   48 statement: PRINTF '(' D_QUO . expression D_QUO ')' SEMI

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 149
    identifiers  go to state 39


state 132

   49 statement: PRINTF '(' expression . ')' SEMI
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 150


state 133

   50 statement: SCANF '(' IDENTIFIER . ')' SEMI

    ')'  shift, and go to state 151


state 134

   10 variable: IDENTIFIER '[' expression . ']'
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression
   80           | IDENTIFIER '[' expression . ']'

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ']'        shift, and go to state 152


state 135

   37 statement: WHILE '(' expression . ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 153


state 136

   38 statement: FOR '(' SEMI . SEMI ')' statement
   40          | FOR '(' SEMI . expression SEMI ')' statement
   41          | FOR '(' SEMI . SEMI expression ')' statement
   45          | FOR '(' SEMI . expression SEMI expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    SEMI        shift, and go to state 154
    '{'         shift, and go to state 37

    expression   go to state 155
    identifiers  go to state 39


state 137

   55 forstart: declares .

    $default  reduce using rule 55 (forstart)


state 138

   39 statement: FOR '(' forstart . SEMI SEMI ')' statement
   42          | FOR '(' forstart . SEMI expression SEMI expression ')' statement
   43          | FOR '(' forstart . SEMI expression SEMI ')' statement
   44          | FOR '(' forstart . SEMI SEMI expression ')' statement

    SEMI  shift, and go to state 156


state 139

   56 forstart: expression .
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87

    $default  reduce using rule 56 (forstart)


state 140

   35 statement: IF '(' expression . ')' statement
   36          | IF '(' expression . ')' statement ELSE statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 157


state 141

   33 statement: RETURN expression SEMI .

    $default  reduce using rule 33 (statement)


state 142

   25 param: descriptor SINGLAND '*' IDENTIFIER .

    $default  reduce using rule 25 (param)


state 143

   23 param: descriptor IDENTIFIER '[' ']' .

    $default  reduce using rule 23 (param)


state 144

   22 param: descriptor IDENTIFIER '[' CONST . ']'

    ']'  shift, and go to state 158


state 145

   77 expression: IDENTIFIER '(' arguments ')' .

    $default  reduce using rule 77 (expression)


state 146

   83 arguments: arguments COMMA . expression

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 159
    identifiers  go to state 39


state 147

   80 expression: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 80 (expression)


state 148

   13 consts: consts COMMA CONST .

    $default  reduce using rule 13 (consts)


state 149

   48 statement: PRINTF '(' D_QUO expression . D_QUO ')' SEMI
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    D_QUO      shift, and go to state 160


state 150

   49 statement: PRINTF '(' expression ')' . SEMI

    SEMI  shift, and go to state 161


state 151

   50 statement: SCANF '(' IDENTIFIER ')' . SEMI

    SEMI  shift, and go to state 162


state 152

   10 variable: IDENTIFIER '[' expression ']' .
   80 expression: IDENTIFIER '[' expression ']' .

    ASSIGN_OP  reduce using rule 10 (variable)
    ASSIGN_OP  [reduce using rule 80 (expression)]
    COMMA      reduce using rule 10 (variable)
    SEMI       reduce using rule 10 (variable)
    SEMI       [reduce using rule 80 (expression)]
    $default   reduce using rule 80 (expression)


state 153

   37 statement: WHILE '(' expression ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 163
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 154

   38 statement: FOR '(' SEMI SEMI . ')' statement
   41          | FOR '(' SEMI SEMI . expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ')'         shift, and go to state 164
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 165
    identifiers  go to state 39


state 155

   40 statement: FOR '(' SEMI expression . SEMI ')' statement
   45          | FOR '(' SEMI expression . SEMI expression ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    SEMI       shift, and go to state 166


state 156

   39 statement: FOR '(' forstart SEMI . SEMI ')' statement
   42          | FOR '(' forstart SEMI . expression SEMI expression ')' statement
   43          | FOR '(' forstart SEMI . expression SEMI ')' statement
   44          | FOR '(' forstart SEMI . SEMI expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    SEMI        shift, and go to state 167
    '{'         shift, and go to state 37

    expression   go to state 168
    identifiers  go to state 39


state 157

   35 statement: IF '(' expression ')' . statement
   36          | IF '(' expression ')' . statement ELSE statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 169
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 158

   22 param: descriptor IDENTIFIER '[' CONST ']' .

    $default  reduce using rule 22 (param)


state 159

   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression
   83 arguments: arguments COMMA expression .

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87

    $default  reduce using rule 83 (arguments)


state 160

   48 statement: PRINTF '(' D_QUO expression D_QUO . ')' SEMI

    ')'  shift, and go to state 170


state 161

   49 statement: PRINTF '(' expression ')' SEMI .

    $default  reduce using rule 49 (statement)


state 162

   50 statement: SCANF '(' IDENTIFIER ')' SEMI .

    $default  reduce using rule 50 (statement)


state 163

   37 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 37 (statement)


state 164

   38 statement: FOR '(' SEMI SEMI ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 171
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 165

   41 statement: FOR '(' SEMI SEMI expression . ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 172


state 166

   40 statement: FOR '(' SEMI expression SEMI . ')' statement
   45          | FOR '(' SEMI expression SEMI . expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ')'         shift, and go to state 173
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 174
    identifiers  go to state 39


state 167

   39 statement: FOR '(' forstart SEMI SEMI . ')' statement
   44          | FOR '(' forstart SEMI SEMI . expression ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ')'         shift, and go to state 175
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 176
    identifiers  go to state 39


state 168

   42 statement: FOR '(' forstart SEMI expression . SEMI expression ')' statement
   43          | FOR '(' forstart SEMI expression . SEMI ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    SEMI       shift, and go to state 177


state 169

   35 statement: IF '(' expression ')' statement .
   36          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 178

    ELSE      [reduce using rule 35 (statement)]
    $default  reduce using rule 35 (statement)


state 170

   48 statement: PRINTF '(' D_QUO expression D_QUO ')' . SEMI

    SEMI  shift, and go to state 179


state 171

   38 statement: FOR '(' SEMI SEMI ')' statement .

    $default  reduce using rule 38 (statement)


state 172

   41 statement: FOR '(' SEMI SEMI expression ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 180
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 173

   40 statement: FOR '(' SEMI expression SEMI ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 181
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 174

   45 statement: FOR '(' SEMI expression SEMI expression . ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 182


state 175

   39 statement: FOR '(' forstart SEMI SEMI ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 183
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 176

   44 statement: FOR '(' forstart SEMI SEMI expression . ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 184


state 177

   42 statement: FOR '(' forstart SEMI expression SEMI . expression ')' statement
   43          | FOR '(' forstart SEMI expression SEMI . ')' statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 31
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    ')'         shift, and go to state 185
    IDENTIFIER  shift, and go to state 35
    CONST       shift, and go to state 40
    '{'         shift, and go to state 37

    expression   go to state 186
    identifiers  go to state 39


state 178

   36 statement: IF '(' expression ')' statement ELSE . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 187
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 179

   48 statement: PRINTF '(' D_QUO expression D_QUO ')' SEMI .

    $default  reduce using rule 48 (statement)


state 180

   41 statement: FOR '(' SEMI SEMI expression ')' statement .

    $default  reduce using rule 41 (statement)


state 181

   40 statement: FOR '(' SEMI expression SEMI ')' statement .

    $default  reduce using rule 40 (statement)


state 182

   45 statement: FOR '(' SEMI expression SEMI expression ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 188
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 183

   39 statement: FOR '(' forstart SEMI SEMI ')' statement .

    $default  reduce using rule 39 (statement)


state 184

   44 statement: FOR '(' forstart SEMI SEMI expression ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 189
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 185

   43 statement: FOR '(' forstart SEMI expression SEMI ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 190
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 186

   42 statement: FOR '(' forstart SEMI expression SEMI expression . ')' statement
   59 expression: expression . ASSIGN_OP expression
   60           | expression . '+' expression
   61           | expression . '-' expression
   62           | expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   67           | expression . AND expression
   68           | expression . OR expression
   71           | expression . EQ_OP expression
   72           | expression . NE_OP expression
   73           | expression . GT_OP expression
   74           | expression . LT_OP expression
   75           | expression . GE_OP expression
   76           | expression . LE_OP expression

    ASSIGN_OP  shift, and go to state 74
    OR         shift, and go to state 75
    AND        shift, and go to state 76
    NE_OP      shift, and go to state 77
    EQ_OP      shift, and go to state 78
    LE_OP      shift, and go to state 79
    GE_OP      shift, and go to state 80
    LT_OP      shift, and go to state 81
    GT_OP      shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '%'        shift, and go to state 87
    ')'        shift, and go to state 191


state 187

   36 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 36 (statement)


state 188

   45 statement: FOR '(' SEMI expression SEMI expression ')' statement .

    $default  reduce using rule 45 (statement)


state 189

   44 statement: FOR '(' forstart SEMI SEMI expression ')' statement .

    $default  reduce using rule 44 (statement)


state 190

   43 statement: FOR '(' forstart SEMI expression SEMI ')' statement .

    $default  reduce using rule 43 (statement)


state 191

   42 statement: FOR '(' forstart SEMI expression SEMI expression ')' . statement

    SINGLAND    shift, and go to state 29
    '-'         shift, and go to state 30
    '*'         shift, and go to state 42
    '!'         shift, and go to state 32
    '('         shift, and go to state 33
    PRINTF      shift, and go to state 43
    SCANF       shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    CONST       shift, and go to state 40
    WHILE       shift, and go to state 46
    FOR         shift, and go to state 47
    BREAK       shift, and go to state 48
    CONTINUE    shift, and go to state 49
    IF          shift, and go to state 50
    RETURN      shift, and go to state 51
    '{'         shift, and go to state 52

    variable     go to state 12
    body         go to state 53
    statement    go to state 192
    declares     go to state 56
    declarevars  go to state 15
    expression   go to state 57
    identifiers  go to state 39


state 192

   42 statement: FOR '(' forstart SEMI expression SEMI expression ')' statement .

    $default  reduce using rule 42 (statement)
